<%= render "shared/all_pages_nav" %>

  <div style = "width : 90%;">
    <%= form_with url: users_path, method: :get, local: true, id: "search-form" do |form| %>
      <%= form.text_field :search, placeholder: "Search by first name, last name or role...", value: params[:search], id: "user-search", style: "width: 100%; padding: 8px; margin-bottom: 10px;" %>
    <% end %>
  </div>

  <div style="margin-bottom: 10px;">
    <button id="filter-options-btn" class="btn" style="padding: 8px 12px;">Filter Options</button>
  </div>

  <div id="filter-modal" class="modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 1000;">
  <div style="background: white; margin: 10% auto; padding: 20px; width: 50%; border-radius: 8px;">
    <h3>Filter Options</h3>
    <form id="filter-form">
      <!-- Roles Section -->
      <div style="margin-bottom: 10px;">
        <label><strong>Roles:</strong></label><br>
        <% ["System Admin", "Member"].each do |role| %>
          <input type="checkbox" name="roles[]" value="<%= role %>" 
                 <%= params[:roles]&.include?(role) ? 'checked' : '' %>> 
          <%= role %><br>
        <% end %>
      </div>

      <!-- Games Section -->
      <div style="margin-bottom: 10px;">
        <label><strong>Games:</strong></label><br>
        <% ["Puzzle Setter", "Puzzle Aesthetician"].each do |special_role| %>
          <strong><%= special_role %></strong><br>
          <% @all_games.each do |game| %>
            <input type="checkbox" name="games[<%= special_role %>][]" value="<%= game %>" 
                   <%= params[:games] && params[:games][special_role]&.include?(game) ? 'checked' : '' %>> 
            <%= game %><br>
          <% end %>
        <% end %>
      </div>

      <button type="submit" class="btn" style="padding: 8px 12px;">Apply Filters</button>
      <button type="button" id="close-filter-modal" class="btn" style="padding: 8px 12px;">Close</button>
    </form>
  </div>
</div>

  <table>
    <caption>All Users</caption>
    <thead>
      <tr>
        <% ["first_name", "last_name", "connected accounts", "roles"].each do |attr| %>
          <th style="color:white;">
            <%= attr.capitalize.sub("_", " ") %>
          </th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <% @users.each do |user| %>
        <tr>
          <td><%= user.first_name %></td>
          <td><%= user.last_name %></td>

          <!---- What accounts are connected? -->
          <td>
            <% all_auths = UserService.fetch_connected_auths(user) %>
            <% if all_auths.key?('email') || all_auths.key?('github') || all_auths.key?('spotify') %>
            <div style="display: flex; justify-content: center; align-items: center; gap: 10px; height: 100%;">
              <% if all_auths.key?('email') %> <!-- Google -->
                <div title="<%= all_auths['email'] %>">
                  <button class="btn sso-btn sso-logo">
                    <i class="fab fa-google"></i>
                  </button>
                </div>
              <% end %>
              <% if all_auths.key?('spotify') %> <!-- Spotify Logo -->
                <div title="<%= all_auths['spotify'] %>">
                  <button class="btn sso-btn sso-logo">
                    <i class="fab fa-spotify"></i>
                  </button>
                </div>
              <% end %>
              <% if all_auths.key?('github') %> <!-- Github Logo -->
                <div title="<%= all_auths['github'] %>">
                  <button class="btn sso-btn sso-logo">
                    <i class="fab fa-github"></i>
                  </button>
                </div>
              <% end %>
              <% end %>
            </div>
            </td>
          <!---- What roles does the user have? -->
          <td>
            <%= link_to(roles_path(user_id: user.id), class:"manage-roles-link") do %>
              <div class="role-entries">
                <% all_roles = user.roles %>
                <% games_roles = user.roles.select{|r| r.game} %>
                <% general_roles = all_roles-games_roles %>
                <% general_roles.each do |role| %>
                  <% if role.role != "Member" %>
                    <div class="role-badge" style="background-color: <%= Role.role_color(role.game ? role.game.name : role.role) %>">
                      <%= role.role %>
                    </div>
                  <% end %>
                <% end %>
                <% Game.all_games.each do |game| %>
                  <% roles = games_roles.select{|r| r.game and r.game.name == game} %>
                  <% if roles.length > 0 %>
                    <div class="dropdown">
                      <div class="role-badge" style="background-color: <%= Role.role_color(game) %>">
                        <%= game %>
                      </div>
                      <div class="dropdown-content role-description" style="background-color: <%= Role.role_color(game).sub! "0.4", "1" %>">
                        <% roles.each do |role| %>
                          <div><%= role.role %></div>
                        <% end %>
                      </div>
                    </div>
                  <% end %>
                <% end %>
              </div>
            <% end %>
          </td>
        </tr>
        <tr>
          <td colspan="6" style="border-bottom: 2px solid white;"></td>
        </tr>
      <% end %>
    </tbody>
  </table>


<script>
  // Debounce function to limit the rate of form submission
  function debounce(func, delay) {
    let debounceTimer;
    return function() {
      clearTimeout(debounceTimer);
      debounceTimer = setTimeout(() => func.apply(this, arguments), delay);
    };
  }

  // Submit form with a debounce
  const searchInput = document.getElementById("user-search");
  const searchForm = document.getElementById("search-form");

  searchInput.addEventListener("input", debounce(() => {
    // Store flag in localStorage to indicate the form was submitted
    localStorage.setItem("searchSubmitted", "true");
    searchForm.submit();
  }, 700));

  // Check if form was submitted and set focus on search input after reload
  window.addEventListener("load", () => {
    if (localStorage.getItem("searchSubmitted") === "true") {
      searchInput.focus(); // Focus back on the search input

      // Move the cursor to the end of the input's value
      const valueLength = searchInput.value.length;
      searchInput.setSelectionRange(valueLength, valueLength);

      localStorage.removeItem("searchSubmitted"); // Clear the flag
    }
  });


  document.getElementById("filter-options-btn").addEventListener("click", () => {
  document.getElementById("filter-modal").style.display = "block";
  });

  document.getElementById("close-filter-modal").addEventListener("click", () => {
    document.getElementById("filter-modal").style.display = "none";
  });

  // Submit filter form and reload users based on selection
  document.getElementById("filter-form").addEventListener("submit", (event) => {
    event.preventDefault(); // Prevent page reload
    const formData = new FormData(event.target);
    const query = new URLSearchParams(formData).toString();
    window.location.href = `<%= users_path %>?${query}`;
  });

</script>

